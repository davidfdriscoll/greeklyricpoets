recombine tables (from this can create table which will display the lines)
this query will create a table where every row represents one line from a birth city to a city of performance; each row will also receive the appropriate poet's name and id #, and columns containing the birth city's name and id and other city's name and id.

SELECT birth_cities.poet_name,
birth_cities.poetid,
birth_cities.city_name as birth_city_name,
birth_cities.cityid as birth_cityid,
other_cities.city_name as other_city_name,
other_cities.cityid as other_cityid,
ST_Makeline(other_cities.the_geom, birth_cities.the_geom) as the_geom
FROM

	(SELECT 
	sorted_poets.poet_name,
	sorted_poets.cityid,
	sorted_poets.poetid,
	cities.city_name,
	cities.the_geom,
	cities.the_geom_webmercator
	FROM cities, (SELECT 
			poets.poet_name,
			poets_cities.cityid,
			poets.poetid
			FROM poets, poets_cities 
			WHERE poets.poetid = poets_cities.poetid 
			AND poets_cities.relationshipid = 1
			) sorted_poets		
	WHERE sorted_poets.cityid = cities.cityid) birth_cities,
	
	(SELECT 
	sorted_poets.poet_name,
	sorted_poets.cityid,
	sorted_poets.poetid,
	cities.city_name,
	cities.the_geom,
	cities.the_geom_webmercator
	FROM cities, (SELECT 
			poets.poet_name,
			poets_cities.cityid,
			poets.poetid
			FROM poets, poets_cities 
			WHERE poets.poetid = poets_cities.poetid 
			AND (poets_cities.relationshipid = 2
			OR poets_cities.relationshipid = 3)
			) sorted_poets		
	WHERE sorted_poets.cityid = cities.cityid) other_cities
	
WHERE birth_cities.poetid = other_cities.poetid