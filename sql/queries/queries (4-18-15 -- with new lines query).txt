dynamic query for total_poets, sorted alphabetically

SELECT 
	cities.cartodb_id,
	cities.the_geom,
	cities.the_geom_webmercator,
	cities.city_name,
	cities.government,
	sorted_poets.cityid,
	COUNT(sorted_poets.cityid) as selected_number,
	string_agg(sorted_poets.sources, ', ') as selected_sources,
	string_agg(sorted_poets.poet_name, ', ') as selected_names,
	string_agg(sorted_poets.poet_link, ', ') as selected_links	
FROM cities, 
	(SELECT 
		poets.poetid,
		poets.poet_name,
		poets.poet_link,
		poets.sources,
		poets_cities.cityid
		FROM poets, poets_cities 
		WHERE poets.poetid = poets_cities.poetid 
		ORDER BY cityid ASC, poet_name ASC) sorted_poets
WHERE cities.cityid = sorted_poets.cityid
GROUP BY sorted_poets.cityid, cities.the_geom, cities.the_geom_webmercator, cities.city_name, cities.cartodb_id

BIGGEST query incorporating relationship to place

SELECT 
	cities.cartodb_id,
	cities.the_geom,
	cities.the_geom_webmercator,
	cities.city_name,
	instrument_players.cityid,
	COUNT(instrument_players.cityid) as selected_number,
	string_agg(instrument_players.poet_name, ', ') as selected_names,
	'who died' as relationship_text
FROM cities, (
	SELECT 
		genre_players.poetid,
		genre_players.poet_name,
		genre_players.cityid
		FROM (
			SELECT 
			date_players.poetid,
			date_players.poet_name,
			date_players.cityid
			FROM ( 
				SELECT
				place_players.poetid,
				place_players.poet_name,
				place_players.cityid				
				FROM (
					SELECT 
					poets.poetid,
					poets.poet_name,
					poets_cities.cityid
					FROM poets, poets_cities 
					WHERE poets.poetid = poets_cities.poetid 
					AND (
						relationshipid = 1 
						OR
						relationshipid = 2
					)
					ORDER BY poet_name ASC
				) place_players, 
				dates
				WHERE place_players.poetid = dates.poetid
				AND (
				dates.date='450'
				OR
				dates.date='425'
				)
				ORDER BY place_players.poet_name ASC
				) date_players,
			genres
			WHERE date_players.poetid = genres.poetid
			AND (
			genres.genreid = 1
			OR
			genres.genreid = 2
            OR
            genres.genreid = 3
            )
			ORDER BY date_players.poet_name ASC
			) genre_players, 
		instruments
		WHERE genre_players.poetid = instruments.poetid
		AND (
		instruments.instrumentid = 2
		OR 
		instruments.instrumentid = 1
		)
		GROUP BY genre_players.poetid, genre_players.poet_name, genre_players.cityid
		ORDER BY genre_players.poet_name ASC
    ) instrument_players
WHERE cities.cityid = instrument_players.cityid
GROUP BY instrument_players.cityid, cities.the_geom, cities.the_geom_webmercator, cities.city_name, cities.cartodb_id

big query choosing poet-lines by genres, etc.

SELECT 
	poet_lines.poet_name,
	poet_lines.poetid,
	poet_lines.birth_city_name,
	poet_lines.birth_cityid,
	poet_lines.other_city_name,
	poet_lines.other_cityid,
	poet_lines.the_geom,
	poet_lines.the_geom_webmercator
FROM poet_lines, (
	SELECT 
		genre_players.poetid,
		genre_players.poet_name,
		genre_players.cityid
		FROM (
			SELECT 
			date_players.poetid,
			date_players.poet_name,
			date_players.cityid
			FROM ( 
				SELECT
				place_players.poetid,
				place_players.poet_name,
				place_players.cityid				
				FROM (
					SELECT 
					poets.poetid,
					poets.poet_name,
					poets_cities.cityid
					FROM poets, poets_cities 
					WHERE poets.poetid = poets_cities.poetid 
					AND (
						relationshipid = 1 
						OR
						relationshipid = 2
					)
					ORDER BY poet_name DESC
				) place_players, 
				dates
				WHERE place_players.poetid = dates.poetid
				AND (
				dates.date='450'
				OR
				dates.date='425'
				)
				ORDER BY place_players.poet_name DESC
				) date_players,
			genres
			WHERE date_players.poetid = genres.poetid
			AND (
			genres.genreid = 1
			OR
			genres.genreid = 2
            OR
            genres.genreid = 3
            )
			ORDER BY date_players.poet_name DESC
			) genre_players, 
		instruments
		WHERE genre_players.poetid = instruments.poetid
		AND (
		instruments.instrumentid = 2
		OR 
		instruments.instrumentid = 1
		)
		GROUP BY genre_players.poetid, genre_players.poet_name, genre_players.cityid
		ORDER BY genre_players.poet_name DESC
    ) instrument_players
WHERE poet_lines.poetid = instrument_players.poetid
GROUP BY
	poet_lines.poet_name,
	poet_lines.poetid,
	poet_lines.birth_city_name,
	poet_lines.birth_cityid,
	poet_lines.other_city_name,
	poet_lines.other_cityid,
	poet_lines.the_geom,
	poet_lines.the_geom_webmercator
	
choose cities based on poets

SELECT 
	cities.cartodb_id,
	cities.the_geom,
	cities.the_geom_webmercator,
	cities.city_name,
	cities.government,
	sorted_poets.cityid,
	COUNT(sorted_poets.cityid) as selected_number,
	string_agg(sorted_poets.sources, ', ') as selected_sources,
	string_agg(sorted_poets.poet_name, ', ') as selected_names,
	string_agg(sorted_poets.poet_link, ', ') as selected_links
FROM cities, 
	(SELECT 
		poets.poetid,
		poets.poet_name,
		poets.poet_link,
		poets.sources,
		poets_cities.cityid
		FROM poets, poets_cities 
		WHERE poets.poetid = poets_cities.poetid 
		AND poets.poetid = 3
		ORDER BY cityid ASC, poet_name ASC) sorted_poets
WHERE cities.cityid = sorted_poets.cityid
GROUP BY sorted_poets.cityid, cities.the_geom, cities.the_geom_webmercator, cities.city_name, cities.cartodb_id

on one line

SELECT cities.cartodb_id, cities.the_geom, cities.the_geom_webmercator, cities.city_name, cities.government, sorted_poets.cityid, COUNT(sorted_poets.cityid) as selected_number, string_agg(sorted_poets.sources, ', ') as selected_sources, string_agg(sorted_poets.poet_name, ', ') as selected_names, string_agg(sorted_poets.poet_link, ', ') as selected_links FROM cities, (SELECT poets.poetid, poets.poet_name, poets.poet_link, poets.sources, poets_cities.cityid FROM poets, poets_cities WHERE poets.poetid = poets_cities.poetid AND poets.poetid = 3 ORDER BY cityid ASC, poet_name ASC) sorted_poets WHERE cities.cityid = sorted_poets.cityid GROUP BY sorted_poets.cityid, cities.the_geom, cities.the_geom_webmercator, cities.city_name, cities.cartodb_id 