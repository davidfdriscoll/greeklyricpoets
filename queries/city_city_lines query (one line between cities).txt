recombine tables (from this can create table which will display the lines)
this query will create a table where every row represents one line from a birth city to a city of performance; each row will also receive the appropriate poet's name and id #, and columns containing the birth city's name and id and other city's name and id.
this works to create curved lines. 

SELECT
lines.birth_city_name,
lines.birth_infowindow_name,
lines.birth_cityid,
lines.birth_regionid,
lines.other_city_name,
lines.other_infowindow_name,
lines.other_cityid,
lines.other_regionid,
lines.the_geom,
lines.arrow_angle
FROM
	(SELECT birth_cities.poet_name,
	birth_cities.infowindow_name as birth_infowindow_name,
	birth_cities.poetid,
	birth_cities.regionid as birth_regionid,
	birth_cities.city_name as birth_city_name,
	birth_cities.cityid as birth_cityid,
	birth_cities.poet_link,
	other_cities.city_name as other_city_name,
	other_cities.infowindow_name as other_infowindow_name,
	other_cities.cityid as other_cityid,
	other_cities.regionid as other_regionid,
	other_cities.sources,
	ST_CurvetoLine(ST_GeomFromText('CIRCULARSTRING(' ||
		st_x(birth_cities.the_geom) ||
		' ' ||
		st_y(birth_cities.the_geom) ||
		', ' ||
		st_x(st_centroid(ST_OffsetCurve(ST_Makeline(other_cities.the_geom, birth_cities.the_geom), st_length(ST_Makeline(other_cities.the_geom, birth_cities.the_geom))/20, 'quad_segs=4 join=bevel'))) ||
		' ' ||
		st_y(st_centroid(ST_OffsetCurve(ST_Makeline(other_cities.the_geom, birth_cities.the_geom), st_length(ST_Makeline(other_cities.the_geom, birth_cities.the_geom))/20, 'quad_segs=4 join=bevel'))) ||
		', ' ||
		st_x(other_cities.the_geom) ||
		' ' ||
		st_y(other_cities.the_geom) ||
		')',4326)) AS the_geom,
	degrees(ST_Azimuth(birth_cities.the_geom, other_cities.the_geom)) as arrow_angle
	FROM
	
		(SELECT
		birth_cities_with_real_city_name.poet_name,
		birth_cities_with_real_city_name.cityid,
		birth_cities_with_real_city_name.regionid,
		birth_cities_with_real_city_name.poetid,
		birth_cities_with_real_city_name.poet_link,
		birth_cities_with_real_city_name.city_name,
		birth_cities_with_real_city_name.the_geom,
		birth_cities_with_real_city_name.the_geom_webmercator,
		birth_cities_with_real_city_name.infowindow_name
		FROM
		
			(SELECT 
			sorted_poets.poet_name,
			sorted_poets.cityid,
			sorted_poets.poetid,
			sorted_poets.poet_link,
			cities.city_name,
			cities.regionid,
			cities.the_geom,
			cities.the_geom_webmercator,
			cities.infowindow_name
			FROM cities,
				(SELECT 
				poets.poet_name,
				poets_cities.cityid,
				poets.poetid,
				poets.poet_link
				FROM poets, poets_cities 
				WHERE poets.poetid = poets_cities.poetid 
				AND poets_cities.relationshipid = 1
				) sorted_poets		
			WHERE sorted_poets.cityid = cities.cityid
			) birth_cities_with_real_city_name,
			
			(SELECT 
			string_agg(cities.city_name, ' or ') as city_name,
			poets_cities.poetid
			FROM cities, poets_cities 
			WHERE cities.cityid = poets_cities.cityid 
			AND poets_cities.relationshipid = 1
			GROUP BY poets_cities.poetid
			) alternative_birth_cities
			
		WHERE birth_cities_with_real_city_name.poetid = alternative_birth_cities.poetid
		) birth_cities,
		
		(SELECT 
		sorted_poets.poet_name,
		sorted_poets.cityid,
		sorted_poets.poetid,
		sorted_poets.sources,
		cities.city_name,
		cities.regionid,
		cities.the_geom,
		cities.the_geom_webmercator,
		cities.infowindow_name
		FROM cities, (SELECT 
				poets.poet_name,
				poets_cities.cityid,
				poets.poetid,
				poets.sources
				FROM poets, poets_cities 
				WHERE poets.poetid = poets_cities.poetid 
				AND (poets_cities.relationshipid = 2
				OR poets_cities.relationshipid = 3)
				) sorted_poets		
		WHERE sorted_poets.cityid = cities.cityid) other_cities
		
	WHERE birth_cities.poetid = other_cities.poetid AND birth_cities.cityid != other_cities.cityid) lines
GROUP BY
lines.birth_city_name,
lines.birth_cityid,
lines.birth_regionid,
lines.birth_infowindow_name,
lines.other_infowindow_name,
lines.other_city_name,
lines.other_cityid,
lines.other_regionid,
lines.the_geom,
lines.arrow_angle